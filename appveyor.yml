#---------------------------------#
#      environment configuration  #
#---------------------------------#

version: 0.26.{build}

image: Visual Studio 2017

environment:
  gallery_api_key:
    secure: WeDp1yZJECZBjjW+22A8lA8+gmz+wiYostPKtU4pdLXORfK//eJCdR7f0k3oJ+2r
  kv_uri:
    secure: ToWberxuJ28SZXXmXw2pF3cxZeIsP3ZSBr904sG51zZcjKJNOZx2NxtoUl1CO/di
  kv_tenant_id:
    secure: 34L9VF4dADbwhVqND0ZnjlgvVj3c8SECOkRBFfQRj3Wf+XzkF0pfY8zKHoLnSUH7
  kv_certificate_name:
    secure: A5EGXdk0rlMEMkC0lXnAah50BH9vj0lsmG4+hhhFcto=
  kv_client_id:
    secure: Pwm+DYnSaV6A40d+NGvkW4qEsBPJbc/t9E8YX+bCmap6RHGzWGLpQRN2LfBTS7nD
  kv_client_secret:
    secure: zUedGJ6RlQpV7Jy37YNHvuHcNOvKbiFjv/BdcgV3kG4Q9JcJFUieIkNxmBKkChlx

install:
    - ps: Write-Verbose -Message "PowerShell version $($PSVersionTable.PSVersion) ($([System.Environment]::OSVersion.Version.ToString()))" -Verbose
    - ps: Install-WindowsFeature -Name RSAT-Hyper-V-Tools -IncludeAllSubFeature -ErrorAction Stop -WarningAction SilentlyContinue -Verbose
    - ps: Install-Module -Name Pester -MaximumVersion 4.99 -Scope CurrentUser -Force -AllowClobber -Verbose
    - ps: Install-Module -Name PSSCriptAnalyzer, PSake, VirtualEngine.Build -Scope CurrentUser -Force -AllowClobber -Verbose
    - ps: $null = Invoke-Expression ((New-Object Net.WebClient).DownloadString('https://raw.githubusercontent.com/appveyor/secure-file/master/install.ps1'))

build: false

on_finish:
  - ps: |
        Invoke-PSake -BuildFile .\Build.PSake.ps1 -TaskList Appveyor

for:

-
  branches:
    only:
      - dev

  test_script:
    - ps: |
          Invoke-PSake -BuildFile .\Build.PSake.ps1 -TaskList Test
          Write-Verbose "PSake.build_success: $($psake.build_success)" -Verbose
          if (-not $psake.build_success) { exit 1 }

-
  branches:
    only:
      - master

  test_script:
    - ps: |
          Invoke-WebRequest 'https://dot.net/v1/dotnet-install.ps1' -OutFile "$env:Temp\dotnet-install.ps1"
          & "$env:Temp\dotnet-install.ps1" -Channel 8.0 -Quality GA
          $env:DOTNET_ROOT = "$env:LOCALAPPDATA\Microsoft\dotnet\"
          & "$env:DOTNET_ROOT\dotnet.exe" tool install --global azuresigntool --add-source https://api.nuget.org/v3/index.json
          Invoke-PSake -BuildFile .\Build.PSake.ps1 -TaskList Publish
          Write-Verbose "PSake.build_success: $($psake.build_success)" -Verbose
          if (-not $psake.build_success) { exit 1 }
